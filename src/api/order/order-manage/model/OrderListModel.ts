import { BasicFetchResult, BasicPageParams } from '@/api/model/baseModel';

export type OrderListParams = {
  externalno: string;
  externalno2: string;
  enterpriseRecordId: string;
  trackingNo: string;
  promotingProductsCode: string;
  serviceProviderCode: string;
  serviceChannelCode: string;
  warehouseCode: string;
  warehouseType: string;
  orderDateRange?: any;
  createStartTime: string;
  createEndTime: string;
  deliveryStartTime: string;
  deliveryEndTime: string;
  labelStartTime: string;
  labelEndTime: string;
  listType: number;
  orderStatus: string; // 订单状态 0草稿 1已发货 2已预报 3问题件 4已取消 5取消待审核
  insuranceSuccess: string | number;
} & BasicPageParams;

export type OrderType = {
  externalno: string;
  externalno2: string;
  trackingNo: string;
  enterpriseRecordId: string;
  serviceChannelCode: string;
  promotingProductsCode: string;
  warehouseCode: string;
  warehouseType: string;
  orderDateRange: any;
  createStartTime: string;
  createEndTime: string;
  deliveryStartTime: string;
  deliveryEndTime: string;
  labelStartTime: string;
  labelEndTime: string;
};

export type OrderListItem = {
  backOff: boolean;
  basicFile: string;
  billsCostStatus: string;
  billsStatus: string;
  chargedWeight: number;
  costChargedWeight: number;
  costPrice: number;
  costVolumeWeight: number;
  createDate: string;
  createId: string;
  currency: string;
  deliveryDate: null;
  deliveryTime: null;
  dimensionUnit: string;
  enterpriseRecord: any;
  enterpriseRecordCode: string;
  enterpriseRecordId: string;
  exceptionType: string;
  externalno: string;
  externalno2: string;
  fileName: string;
  height: number;
  home: boolean;
  id: string;
  idCardNo: string;
  insuranceService: boolean;
  insuranceValue: number;
  labelContent: string;
  labelDate: string;
  labelSize: number;
  labelType: string;
  labelUrl: string;
  length: number;
  measurementList: any[];
  needClearance: number;
  orderApiLogList: any[];
  orderCostDetailList: any[];
  orderCostType: string;
  orderDetailList: any[];
  orderMsgStatus: string;
  orderNo: string;
  orderStatus: string;
  orderStatusRemark: string;
  orderStatusTemp: string;
  orderTrackDetailList: any[];
  orderTrackStatus: string;
  otherEnterpriseRecordId: string;
  packageType: string;
  pbFacility: string;
  poa: string;
  price: number;
  priceDetail: string;
  promotingProductsCode: string;
  receiverAddr1: string;
  receiverAddr2: string;
  receiverAddrType: string;
  receiverCity: string;
  receiverCompany: string;
  receiverCountry: string;
  receiverDistrict: string;
  receiverFirstname: string;
  receiverLastname: string;
  receiverMail: string;
  receiverMobile: string;
  receiverPostcode: string;
  receiverProvince: string;
  referenceNo: string;
  remark: string;
  remarkType: string;
  scanResetStatus: string;
  senderAddr1: string;
  senderAddr2: string;
  senderCity: string;
  senderCompany: string;
  senderCountry: string;
  senderDistrict: string;
  senderFirstname: string;
  senderLastname: string;
  senderMail: string;
  senderMobile: string;
  senderPostcode: string;
  senderProvince: string;
  serviceChannelCode: string;
  serviceCode: string;
  serviceProviderCode: string;
  signatureService: string;
  sysCostPrice: number;
  token: string;
  tokenTracking: string;
  trackDate: null;
  trackNum: number;
  trackingNo: string;
  tryCount: number;
  tryHandleCount: number;
  updateDate: string;
  updateId: string;
  version: number;
  volumeWeight: number;
  warehouseCode: string;
  weight: number;
  weightUnit: number;
  width: number;
};

export type OrderDetailListItem = {
  adjustedCost: number;
  cost: number;
  costCode: string;
  costName: string;
  createBy: string;
  createTime: string;
  currency: string;
  delFlag: string;
  externalOrderId: string;
  id: number;
  rule: string;
  type: string;
  updateBy: string;
  updateTime: string;
  zoneCode: string;
  price?: number;
  text?: string;
  costPrice?: number;
};

export type LogListItem = {
  operateType: string;
  createTime: string;
  createBy: string;
  interfaceType: string;
};

export type ChannelDetailListItem = {
  isActive?: boolean;
  createDate: string;
  details: string;
  statusDescription: string;
};

export type ChannelDetail = {
  id: number;
  externalOrderId: string;
  details: string;
  statusDescription: string;
  createDate: string;
  isActive?: boolean;
};

export type OrderListReturnType = BasicFetchResult<OrderListItem>;

export interface OrderDetail {
  backOff: boolean;
  basicFile: string;
  billsCostStatus: string;
  billsStatus: string;
  chargedWeight: number;
  costChargedWeight: number;
  costPrice: number;
  costVolumeWeight: number;
  createDate: Date;
  createId: string;
  currency: string;
  deliveryDate: null;
  deliveryTime: null;
  dimensionUnit: string;
  enterpriseRecord: null;
  enterpriseRecordCode: string;
  enterpriseRecordId: string;
  exceptionType: string;
  externalno: string;
  externalno2: string;
  fileName: string;
  height: number;
  home: boolean;
  id: string;
  idCardNo: string;
  insuranceService: boolean;
  insuranceValue: number;
  labelContent: string;
  labelDate: Date;
  labelSize: number;
  labelType: string;
  labelUrl: string;
  length: number;
  measurementList: MeasurementList[];
  needClearance: number;
  orderApiLogList: OrderAPILogList[];
  orderCostDetailList: OrderCostDetailList[];
  salePriceList: OrderCostDetailList[]; // custom
  costPriceList: OrderCostDetailList[]; // custom
  orderCostType: string;
  orderDetailList: OrderDetailList[];
  orderMsgStatus: string;
  orderNo: string;
  orderStatus: string;
  orderStatusRemark: string;
  orderStatusTemp: string;
  orderTrackDetailList: any[];
  orderTrackStatus: string;
  otherEnterpriseRecordId: string;
  packageType: string;
  pbFacility: string;
  poa: string;
  price: number;
  priceDetail: string;
  promotingProductsCode: string;
  quantity: number;
  receiverAddr1: string;
  receiverAddr2: string;
  receiverAddrType: string;
  receiverCity: string;
  receiverCompany: string;
  receiverCountry: string;
  receiverDistrict: string;
  receiverFirstname: string;
  receiverLastname: string;
  receiverMail: string;
  receiverMobile: string;
  receiverPostcode: string;
  receiverProvince: string;
  referenceNo: string;
  remark: string;
  remarkType: string;
  scanResetStatus: string;
  senderAddr1: string;
  senderAddr2: string;
  senderCity: string;
  senderCompany: string;
  senderCountry: string;
  senderDistrict: string;
  senderFirstname: string;
  senderLastname: string;
  senderMail: string;
  senderMobile: string;
  senderPostcode: string;
  senderProvince: string;
  serviceChannelCode: string;
  serviceCode: string;
  serviceProviderCode: string;
  signatureService: string;
  signatureServiceLabel: string; // custom
  sysCostPrice: number;
  token: string;
  tokenTracking: string;
  trackDate: null;
  trackNum: number;
  trackingNo: string;
  tryCount: number;
  tryHandleCount: number;
  updateDate: Date;
  updateId: string;
  version: number;
  volumeWeight: number;
  warehouseCode: string;
  weight: number;
  weightUnit: string;
  width: number;
  policyNo: string;
  policyUrl: string;
}

export interface MeasurementList {
  barcode: string;
  clientRefNo: string;
  dimensionUnit: string;
  externalOrder: null;
  externalOrderId: string;
  externalSystemNo: string;
  height: number;
  id: number;
  insuranceValue: number;
  labelType: string;
  labelUrl: string;
  length: number;
  measurementNo: string;
  price: number;
  priceDetail: string;
  remark: string;
  trackingNo: string;
  weight: number;
  weightUnit: string;
  width: number;
}

export interface OrderAPILogList {
  basicFile: string;
  createBy: string;
  createTime: Date;
  externalOrderId: string;
  fileName: string;
  id: number;
  interfaceType: string;
  operateType: string;
  remark: string;
  serviceCode: string;
  status: number;
}

export interface OrderCostDetailList {
  adjustedCost: number;
  cost: number;
  costCode: string;
  costName: string;
  createBy: string;
  createTime: Date;
  currency: string;
  delFlag: string;
  externalOrderId: string;
  id: number;
  rule: string;
  type: string;
  updateBy: string;
  updateTime: Date;
  zoneCode: string;
  price?: number;
  text?: string;
  costPrice?: number;
}

export interface OrderDetailList {
  cnName: string;
  currency: string;
  customCode: string;
  enName: string;
  externalOrder: null;
  externalOrderId: string;
  goodsName: string;
  goodsRecord: null;
  goodsRecordId: string;
  grossWeight: number;
  hsCode: string;
  id: string;
  netWeight: number;
  price: number;
  quantity: number;
  sku: string;
  unitPrice: number;
  weight: number;
}
